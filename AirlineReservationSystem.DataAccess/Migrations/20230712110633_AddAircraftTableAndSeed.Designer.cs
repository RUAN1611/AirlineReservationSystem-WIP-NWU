// <auto-generated />
using System;
using AirlineReservationSystem.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirlineReservationSystem.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230712110633_AddAircraftTableAndSeed")]
    partial class AddAircraftTableAndSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AirlineReservationSystem.Models.Aircraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<double>("FuelEconomy")
                        .HasColumnType("float");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MaxCruiseSpeed")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalNoOfSeats")
                        .HasColumnType("int");

                    b.Property<double>("TravelRange")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Aircrafts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateRegistered = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelEconomy = 2.5,
                            Manufacturer = "Boeing",
                            MaxCruiseSpeed = 1480.0,
                            Name = "Boeing 747",
                            OriginalPrice = 10000000m,
                            SerialNumber = "747-001",
                            TotalNoOfSeats = 400,
                            TravelRange = 21000.0
                        },
                        new
                        {
                            Id = 2,
                            DateRegistered = new DateTime(2018, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelEconomy = 2.2999999999999998,
                            Manufacturer = "Airbus",
                            MaxCruiseSpeed = 1520.0,
                            Name = "Airbus A380",
                            OriginalPrice = 12000000m,
                            SerialNumber = "A380-002",
                            TotalNoOfSeats = 525,
                            TravelRange = 24000.0
                        },
                        new
                        {
                            Id = 3,
                            DateRegistered = new DateTime(2015, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelEconomy = 1.6000000000000001,
                            Manufacturer = "Bombardier",
                            MaxCruiseSpeed = 1400.0,
                            Name = "Bombardier CRJ200",
                            OriginalPrice = 2000000m,
                            SerialNumber = "CRJ200-003",
                            TotalNoOfSeats = 50,
                            TravelRange = 4800.0
                        },
                        new
                        {
                            Id = 4,
                            DateRegistered = new DateTime(2017, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelEconomy = 4.0,
                            Manufacturer = "Cessna",
                            MaxCruiseSpeed = 550.0,
                            Name = "Cessna 172 Skyhawk",
                            OriginalPrice = 300000m,
                            SerialNumber = "C172-004",
                            TotalNoOfSeats = 4,
                            TravelRange = 2400.0
                        },
                        new
                        {
                            Id = 5,
                            DateRegistered = new DateTime(2019, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelEconomy = 2.6000000000000001,
                            Manufacturer = "Pilatus",
                            MaxCruiseSpeed = 900.0,
                            Name = "Pilatus PC-12",
                            OriginalPrice = 4500000m,
                            SerialNumber = "PC12-005",
                            TotalNoOfSeats = 9,
                            TravelRange = 3840.0
                        },
                        new
                        {
                            Id = 6,
                            DateRegistered = new DateTime(2021, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelEconomy = 1.6000000000000001,
                            Manufacturer = "Gulfstream",
                            MaxCruiseSpeed = 1480.0,
                            Name = "Gulfstream G650",
                            OriginalPrice = 60000000m,
                            SerialNumber = "G650-006",
                            TotalNoOfSeats = 18,
                            TravelRange = 20000.0
                        });
                });

            modelBuilder.Entity("AirlineReservationSystem.Models.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Airports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Johannesburg",
                            Name = "OR Tambo International Airport",
                            Province = "Gauteng"
                        },
                        new
                        {
                            Id = 2,
                            City = "Cape Town",
                            Name = "Cape Town International Airport",
                            Province = "Western Cape"
                        },
                        new
                        {
                            Id = 3,
                            City = "Durban",
                            Name = "King Shaka International Airport",
                            Province = "KwaZulu-Natal"
                        },
                        new
                        {
                            Id = 4,
                            City = "Johannesburg",
                            Name = "Lanseria International Airport",
                            Province = "Gauteng"
                        },
                        new
                        {
                            Id = 5,
                            City = "Port Elizabeth",
                            Name = "Port Elizabeth International Airport",
                            Province = "Eastern Cape"
                        },
                        new
                        {
                            Id = 6,
                            City = "Nelspruit",
                            Name = "Kruger Mpumalanga International Airport",
                            Province = "Mpumalanga"
                        },
                        new
                        {
                            Id = 7,
                            City = "East London",
                            Name = "East London Airport",
                            Province = "Eastern Cape"
                        },
                        new
                        {
                            Id = 8,
                            City = "Bloemfontein",
                            Name = "Bram Fischer International Airport",
                            Province = "Free State"
                        },
                        new
                        {
                            Id = 9,
                            City = "George",
                            Name = "George Airport",
                            Province = "Western Cape"
                        },
                        new
                        {
                            Id = 10,
                            City = "Kimberley",
                            Name = "Kimberley Airport",
                            Province = "Northern Cape"
                        },
                        new
                        {
                            Id = 11,
                            City = "Upington",
                            Name = "Upington International Airport",
                            Province = "Northern Cape"
                        },
                        new
                        {
                            Id = 12,
                            City = "Pilanesberg",
                            Name = "Pilanesberg International Airport",
                            Province = "North West"
                        },
                        new
                        {
                            Id = 13,
                            City = "Margate",
                            Name = "Margate Airport",
                            Province = "KwaZulu-Natal"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
